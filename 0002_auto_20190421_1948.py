# Generated by Django 2.1.7 on 2019-04-21 19:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        ('backend_main', '0001_initial'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='org_media',
            name='media_id',
        ),
        migrations.RemoveField(
            model_name='org_media',
            name='org_id',
        ),
        migrations.RenameField(
            model_name='historicalorg',
            old_name='verified',
            new_name='is_staff',
        ),
        migrations.RenameField(
            model_name='org',
            old_name='verified',
            new_name='is_staff',
        ),
        migrations.RemoveField(
            model_name='historicalorg',
            name='contact',
        ),
        migrations.RemoveField(
            model_name='historicalorg',
            name='description',
        ),
        migrations.RemoveField(
            model_name='historicalorg',
            name='owner',
        ),
        migrations.RemoveField(
            model_name='org',
            name='contact',
        ),
        migrations.RemoveField(
            model_name='org',
            name='description',
        ),
        migrations.RemoveField(
            model_name='org',
            name='owner',
        ),
        migrations.AddField(
            model_name='event',
            name='tags',
            field=models.ManyToManyField(through='backend_main.Event_Tags', to='backend_main.Tag'),
        ),
        migrations.AddField(
            model_name='historicalorg',
            name='bio',
            field=models.CharField(blank=True, default='', max_length=500),
        ),
        migrations.AddField(
            model_name='historicalorg',
            name='email',
            field=models.EmailField(db_index=True, default='', max_length=254),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicalorg',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='historicalorg',
            name='is_superuser',
            field=models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status'),
        ),
        migrations.AddField(
            model_name='historicalorg',
            name='last_login',
            field=models.DateTimeField(blank=True, null=True, verbose_name='last login'),
        ),
        migrations.AddField(
            model_name='historicalorg',
            name='password',
            field=models.CharField(default='', max_length=128, verbose_name='password'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='org',
            name='bio',
            field=models.CharField(blank=True, default='', max_length=500),
        ),
        migrations.AddField(
            model_name='org',
            name='email',
            field=models.EmailField(default='', max_length=254, unique=True),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='org',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='org',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='org',
            name='is_superuser',
            field=models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status'),
        ),
        migrations.AddField(
            model_name='org',
            name='last_login',
            field=models.DateTimeField(blank=True, null=True, verbose_name='last login'),
        ),
        migrations.AddField(
            model_name='org',
            name='password',
            field=models.CharField(default='', max_length=128, verbose_name='password'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='org',
            name='tags',
            field=models.ManyToManyField(through='backend_main.Org_Tags', to='backend_main.Tag'),
        ),
        migrations.AddField(
            model_name='org',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterField(
            model_name='historicalorg',
            name='name',
            field=models.CharField(max_length=30),
        ),
        migrations.AlterField(
            model_name='historicalorg',
            name='website',
            field=models.CharField(blank=True, default='', max_length=100),
        ),
        migrations.AlterField(
            model_name='org',
            name='name',
            field=models.CharField(max_length=30),
        ),
        migrations.AlterField(
            model_name='org',
            name='website',
            field=models.CharField(blank=True, default='', max_length=100),
        ),
        migrations.AlterField(
            model_name='org_tags',
            name='org_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='org_tags', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='tag',
            name='id',
            field=models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.DeleteModel(
            name='Org_Media',
        ),
    ]
